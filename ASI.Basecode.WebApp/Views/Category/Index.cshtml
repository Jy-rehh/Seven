@section styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* Custom button color */
        .btn-custom, .btn-primary, .btn-secondary, .btn-danger {
            border-radius: 50px;
            padding: 10px 20px;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

            /* Optional: Add a hover effect for buttons */
            .btn-custom:hover, .btn-primary:hover, .btn-secondary:hover {
                background: #548E87;
                color: white;
            }

            .btn-danger:hover {
                background-color: #FF7F7F;
            }

        /* Ensures modal is centered */
        .modal-dialog-centered-custom {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        /* Flex container for buttons */
        .nav-upper {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .close, .close:hover {
            outline: none;
            border: none;
            color: #FFFFFF;
        }

        thead {
            z-index: 1;
            position: relative;
        }
    </style>
}

@model IEnumerable<ASI.Basecode.Services.ServiceModels.CategoryViewModel>

@{
    ViewData["Title"] = "Categories";
}
<div class="nav-upper">
    <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#addCategoryModal" style="font-weight: bold;">
        <i class="fa-solid fa-circle-plus"></i> Add Category
    </a>
    <div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form asp-action="Create" method="post">
                        <div class="form-group">
                            <label for="Name">Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" style="border-radius: 20px;" required>
                        </div>
                        <button type="submit" class="btn btn-secondary">Save Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Sort Dropdown -->
    <div class="sort">
        <select class="sort-control" id="Sort" name="Sort">
            <option value="" enable selected>Sort by</option>
            <option value="titleAsc">Title (A-Z)</option>
            <option value="titleDesc">Title (Z-A)</option>
            <option value="dateAsc">Date Created (Oldest First)</option>
            <option value="dateDesc">Date Created (Newest First)</option>
        </select>

    </div>
</div>

<!-- Error Modal -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="modal fade show" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content border-danger">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="errorModalLabel">Error</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@TempData["ErrorMessage"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Main Category Table -->
<div class="main-content" style="height: 100%; margin-top: 20px; background-color: #1A554F">
    <table id="categoryTable" class="table" style="color: #FFFFFF; border-radius: 20px 20px 0px 0px;">
        <thead>
            <tr>
                <th>Name</th>
                <th>Date Created</th>
                <th>Date Updated</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody class="data" style="background-color: #FFFFFF; color: #000000;">
            @foreach (var item in Model)
            {
                <tr class="category-row" data-id="@item.CategoryId" data-name="@item.Name"
                    data-datecreated="@item.DateCreated" data-dateupdated="@item.DateUpdated"
                    data-description="@item.Description">
                    <td>@item.Name</td>
                    <td>@item.DateCreated</td>
                    <td>@item.DateUpdated</td>
                    <td>
                        <button style="width: 50px; height: fit-content; border-radius: 20px; padding: 5px;"
                                class="btn btn-secondary edit-category-btn"
                                data-toggle="modal"
                                data-target="#categoryEditModal"
                                data-id="@item.CategoryId"
                                data-name="@item.Name"
                                data-date="@item.DateCreated">
                            Edit
                        </button>
                        <button style="width: 60px; height: fit-content; border-radius: 20px; padding: 5px;"
                                class="btn btn-danger delete-category-btn"
                                data-toggle="modal"
                                data-target="#confirmDeleteModal"
                                data-id="@item.CategoryId"
                                data-name="@item.Name">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination -->
<div id="paginationControls" class="d-flex justify-content-end mt-3"></div>

<!-- Category Details Modal -->
<div class="modal fade" id="categoryDetailModal" tabindex="-1" role="dialog" aria-labelledby="categoryDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryDetailModalLabel" style="margin-left: 15px;">Category Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border: none; outline: none;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="editName">Name</label>
                    <input type="text" class="form-control" id="editName" name="Name" style="border-radius: 20px;" disabled>
                </div>
                <div class="form-group">
                    <label for="editDate">Date</label>
                    <input type="date" class="form-control" id="editDate" name="Date" style="border-radius: 20px;" disabled>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="categoryEditModal" tabindex="-1" role="dialog" aria-labelledby="categoryEditModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryEditModalLabel" style="margin-left: 15px;">Edit Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" method="post" asp-action="Edit">
                    <input type="hidden" id="editCategoryId" name="CategoryId">
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" class="form-control" id="editName" style="border-radius: 20px;" name="Name">
                    </div>
                    <button type="submit" id="saveChanges" class="btn btn-secondary" style="display: flex;">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered-custom" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel" style="margin-left: 15px;">Delete Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete category "<span id="categoryName"></span>"?</p>
            </div>
            <div class="modal-footer">
                <form asp-action="PostDelete" method="post">
                    <input type="hidden" id="categoryId" name="CategoryId" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Show the error modal if there is an error message
            if ('@TempData["ErrorMessage"]' !== '') {
                $('#errorModal').modal('show');
            }

            // Ensure the modal can be closed properly
            $('#errorModal').on('hidden.bs.modal', function () {
                $(this).removeClass('show').attr('style', 'display: none;');
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Open Expense Details Modal on row click
            $(".category-row").click(function (e) {
                // Get data attributes from the clicked row
                const name = $(this).data("name");
                const date = $(this).data("date");
                // Populate modal fields
                $("#categoryDetailModal #editName").val(name);
                $("#categoryDetailModal #editDate").val(date);

                // Show the modal
                $("#categoryDetailModal").modal("show");
            });

            // Open Delete Confirmation Modal on Delete button click
            $(".delete-category-btn").click(function (e) {
                e.stopPropagation(); // Prevent triggering row click event


                // Populate and show the delete confirmation modal
                const categoryId = $(this).data("id");
                const name = $(this).data("name");

                $("#confirmDeleteModal #categoryId").val(categoryId);
                $("#confirmDeleteModal #categoryName").text(name);

                $("#confirmDeleteModal").modal("show");
            });
        });
    </script>

    <script>
        // Sort Table
        $('#Sort').change(function () {
            var sortBy = $(this).val();
            var rows = $('#categoryTable tbody tr').get();


            rows.sort(function (a, b) {
                var valA, valB;

                switch (sortBy) {
                    case 'titleAsc':
                        valA = $(a).data('name').toLowerCase();
                        valB = $(b).data('name').toLowerCase();
                        return valA.localeCompare(valB);
                    case 'titleDesc':
                        valA = $(a).data('name').toLowerCase();
                        valB = $(b).data('name').toLowerCase();
                        return valB.localeCompare(valA);
                    case 'dateAsc':
                        valA = new Date($(a).data('date'));
                        valB = new Date($(b).data('date'));
                        return valA - valB;
                    case 'dateDesc':
                        valA = new Date($(a).data('date'));
                        valB = new Date($(b).data('date'));
                        return valB - valA;
                    default:
                        return 0;
                }
            });

            // Append sorted rows back to the table
            $.each(rows, function (index, row) {
                $('#categoryTable tbody').append(row);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Open Edit Expense Modal on Edit button click
            $(".edit-category-btn").click(function (e) {
                e.stopPropagation(); // Prevent triggering row click event


                // Populate the edit modal
                const categoryId = $(this).data("id");
                const name = $(this).data("name");

                // Set values in the modal form fields
                $("#editCategoryForm #editCategoryId").val(categoryId);
                $("#editCategoryForm #editName").val(name);

                // Enable form fields
                $("#editCategoryForm input, #editCategoryForm textarea, #editCategoryForm select").prop("disabled", false);

                // Show the modal
                $("#categoryEditModal").modal("show");
            });

            // Form submission for Edit Expense
            $(document).ready(function () {
                $('#editCategoryForm').submit(function (e) {
                    e.preventDefault(); // Prevent the default form submission

                    var formData = $(this).serialize(); // Serialize the form data

                    $.ajax({
                        url: '/Category/Edit', // The URL of the Edit action
                        type: 'POST',
                        data: formData,
                        success: function (response) {
                            // After successful submission, reload the page to show the updated data
                            window.location.href = '/Category/Index'; // Redirect to the Index page
                        },
                        error: function () {
                            alert('An error occurred while updating the category.');
                        }
                    });
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            const rowsPerPage = 7; // Number of rows per page
            const rows = $('#categoryTable tbody tr'); // All rows in the table
            const totalRows = rows.length; // Total number of rows
            const totalPages = Math.ceil(totalRows / rowsPerPage); // Total pages

            // Function to display a specific page
            function displayPage(page) {
                rows.hide(); // Hide all rows
                const start = (page - 1) * rowsPerPage; // Starting row index
                const end = start + rowsPerPage; // Ending row index
                rows.slice(start, end).show(); // Show only rows for the current page
                generatePaginationButtons(page); // Update pagination controls

            }

            // Function to generate pagination buttons
            function generatePaginationButtons(currentPage) {
                const paginationControls = $('#paginationControls');
                paginationControls.empty(); // Clear existing buttons

                // Previous Button
                const prevDisabled = currentPage === 1 ? 'disabled' : '';
                paginationControls.append(
                    `<button class="pagination-btn" data-page="${currentPage - 1}" ${prevDisabled}>Previous</button>`
                );

                // Page Numbers
                for (let i = 1; i <= totalPages; i++) {
                    const activeClass = i === currentPage ? 'active' : '';
                    paginationControls.append(
                        `<button class="pagination-btn ${activeClass}" data-page="${i}">${i}</button>`
                    );
                }

                // Next Button
                const nextDisabled = currentPage === totalPages ? 'disabled' : '';
                paginationControls.append(
                    `<button class="pagination-btn" data-page="${currentPage + 1}" ${nextDisabled}>Next</button>`
                );
            }

            // Handle button clicks
            $('#paginationControls').on('click', '.pagination-btn', function () {
                const page = parseInt($(this).data('page'), 10);
                if (!isNaN(page)) {
                    displayPage(page);
                }
            });

            // Initialize the first page
            displayPage(1);
        });

        // Check for success message and display Toastr notification
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }

    </script>
}
