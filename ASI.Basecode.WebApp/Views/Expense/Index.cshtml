@section styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" /> <!-- Add Bootstrap CSS -->
    <style>
        /* Custom button color */
        .btn-custom, .btn-primary, .btn-secondary, .btn-danger {
            border-radius: 50px;
            padding: 10px 20px;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

            /* Optional: Add a hover effect for buttons */
            .btn-custom:hover, .btn-primary:hover, .btn-secondary:hover, .btn-danger:hover {
                background: #548E87;
                color: white;
            }

        /* Ensures modal is centered */
        .modal-dialog-centered-custom {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        /* Flex container for buttons */
        .nav-upper {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

    </style>
}

@model ASI.Basecode.Services.ServiceModels.ExpenseDataModel

@{
    ViewData["Title"] = "Expenses";
}

<div class="nav-upper">
    <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#addExpenseModal">
        <i class="fa-solid fa-circle-plus"></i> Add Expense
    </a>    <div class="modal fade" id="addExpenseModal" tabindex="-1" role="dialog" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addExpenseModalLabel">Add Expense</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Add form fields for expense details -->
                    <form asp-action="Create">
                        <div class="form-group">
                            <label for="Title">Title</label>
                            <input type="text" class="form-control" id="Title" name="Title" required>
                        </div>
                        <div class="form-group">
                            <label for="category">Category</label>
                            <select class="form-control" id="CategoryId" name="CategoryId" required>
                                @foreach (var category in Model.CategoryViewModel)
                                {
                                    <option value="@category.CategoryId">@category.Name</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="Amount">Amount</label>
                            <input type="number" class="form-control" id="Amount" name="Amount" step="0.01" required>
                        </div>
                        <div class="form-group">
                            <label for="Description">Description</label>
                            <input type="text" class="form-control" id="Description" name="Description">
                        </div>
                        <!-- Add more fields as needed -->
                        <button type="submit" class="btn btn-secondary">Save Expense</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Filter Dropdown -->
    <div class="filter">
        <select class="filter-control" id="Filter" name="Filter">
            <option value="" disabled selected>Filter by Category</option>
            @foreach (var category in Model.CategoryViewModel)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </select>
    </div>

    <!-- Sort Dropdown -->
    <div class="sort">
        <select class="sort-control" id="Sort" name="Sort">
            <option value="" disabled selected>Sort by</option>
            <option value="titleAsc">Title (A-Z)</option>
            <option value="titleDesc">Title (Z-A)</option>
            <option value="amountAsc">Amount (Low to High)</option>
            <option value="amountDesc">Amount (High to Low)</option>
            <option value="dateAsc">Date (Oldest First)</option>
            <option value="dateDesc">Date (Newest First)</option>
        </select>
    </div>
</div>

<!-- Sort By Modal -->
<div class="modal fade" id="sortByModal" tabindex="-1" role="dialog" aria-labelledby="sortByModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered-custom" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sortByModalLabel">Sort Expenses</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="sortBy">Sort By</label>
                        <select class="form-control" id="sortBy">
                            <option value="title">Title</option>
                            <option value="amount">Amount</option>
                            <option value="dateCreated">Date Created</option>
                            <option value="description">Description</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Sort</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Main Category Table -->
<div class="main-content">
    <table class="table" style="color: white;">
        <thead>
            <tr>
                <th>Title</th>
                <th>Category</th>
                <th>Amount</th>
                <th>Date Created</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ExpenseViewModel)
            {
                <tr data-toggle="modal" data-target="#expenseDetailModal"
                    data-id="@item.ExpenseId" data-title="@item.Title"
                    data-category="@item.CategoryId" data-amount="@item.Amount"
                    data-date="@item.DateCreated" data-description="@item.Description"
                    class="expense-row">

                    <td>@item.Title</td>
                    <td>@item.CategoryName</td> <!-- Category Name based on CategoryId -->
                    <td>@item.Amount</td>
                    <td>@item.DateCreated</td>
                    <td>@item.Description</td>
                </tr>
            }
        </tbody>

    </table>

</div>

<div class="modal fade" id="expenseDetailModal" tabindex="-1" role="dialog" aria-labelledby="expenseDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="expenseDetailModalLabel">Expense Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Edit form with fields disabled initially -->
                <form id="editExpenseForm" method="post" asp-action="Edit">
                    <input type="hidden" id="editExpenseId" name="ExpenseId" />

                    <div class="form-group">
                        <label for="editTitle">Title</label>
                        <input type="text" class="form-control" id="editTitle" name="Title" disabled>
                    </div>
                    <div class="form-group">
                        <label for="category">Category</label>
                        <select class="form-control" id="CategoryId" name="CategoryId" disabled>
                            @foreach (var category in Model.CategoryViewModel)
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAmount">Amount</label>
                        <input type="number" class="form-control" id="editAmount" name="Amount" step="0.01" disabled>
                    </div>
                    <div class="form-group">
                        <label for="editDate">Date</label>
                        <input type="date" class="form-control" id="editDate" name="Date" disabled>
                    </div>
                    <div class="form-group">
                        <label for="editDescription">Description</label>
                        <textarea class="form-control" id="editDescription" name="Description" rows="3" disabled></textarea>
                    </div>

                    <button type="submit" class="btn btn-primary" id="saveChanges" style="display: none;">Save Changes</button>
                </form>
            </div>
            <div class="modal-footer">
                <button id="editBtn" class="btn btn-secondary">Edit</button>
                <button id="deleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered-custom" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Delete Expense</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the expense? "<span id="expenseTitle"></span>"?</p>
            </div>
            <div class="modal-footer">
                <form asp-action="PostDelete" method="post">
                    <input type="hidden" id="expenseId" name="ExpenseId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Load expense details into form on row click
            $(".expense-row").click(function () {
                let expenseId = $(this).data("id");
                $("#editExpenseId").val(expenseId);
                $("#editTitle").val($(this).data("title"));
                $("#editCategory").val($(this).data("category"));
                $("#editAmount").val($(this).data("amount"));
                $("#editDate").val($(this).data("date"));
                $("#editDescription").val($(this).data("description"));

                // Ensure form fields are disabled initially
                $("#editExpenseForm input, #editExpenseForm textarea").prop("disabled", true);
                $("#saveChanges").hide();
            });

            // Enable edit mode
            $("#editBtn").click(function () {
                $("#editExpenseForm input, #editExpenseForm textarea, #CategoryId").prop("disabled", false);
                $("#saveChanges").show();
            });

            // Trigger delete confirmation modal
            $("#deleteBtn").click(function () {
                let expenseId = $("#editExpenseId").val();
                let expenseTitle = $("#editTitle").val();

                console.log("Deleting Expense ID:", expenseId); // Log the ExpenseId
                console.log("Deleting Expense Title:", expenseTitle); // Log the title

                $("#expenseId").val(expenseId);
                $("#expenseTitle").text(expenseTitle);

                $("#confirmDeleteModal").modal("show");
            });

            // Confirm delete action
            $("#confirmDelete").click(function () {
                let expenseId = $("#editExpenseId").val();
                // Perform delete action here, e.g., submit a delete form
                alert("Expense " + expenseId + " deleted.");
                $("#confirmDeleteModal").modal("hide");
                $("#expenseDetailModal").modal("hide");
            });
            // Trigger filtering when an option is selected in the filter dropdown
            $('#Filter').change(function () {
                let selectedCategory = $(this).val();
                filterTable(selectedCategory);
            });

            // Trigger sorting when an option is selected in the sort dropdown
            $('#Sort').change(function () {
                let selectedSort = $(this).val();
                sortTable(selectedSort);
            });

            // Function to filter table rows by category
            function filterTable(categoryId) {
                $(".expense-row").each(function () {
                    // Get the category ID of the current row
                    let rowCategoryId = $(this).data("category");

                    // Show or hide the row based on the selected category
                    if (categoryId === "" || rowCategoryId == categoryId) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }

            // Function to sort table rows based on selected criteria
            function sortTable(sortOption) {
                let rows = $('.expense-row').get();

                rows.sort(function (a, b) {
                    let valueA, valueB;

                    switch (sortOption) {
                        case "titleAsc":
                            valueA = $(a).find("td:nth-child(1)").text().toLowerCase();
                            valueB = $(b).find("td:nth-child(1)").text().toLowerCase();
                            return valueA.localeCompare(valueB);
                        case "titleDesc":
                            valueA = $(a).find("td:nth-child(1)").text().toLowerCase();
                            valueB = $(b).find("td:nth-child(1)").text().toLowerCase();
                            return valueB.localeCompare(valueA);
                        case "amountAsc":
                            valueA = parseFloat($(a).find("td:nth-child(3)").text());
                            valueB = parseFloat($(b).find("td:nth-child(3)").text());
                            return valueA - valueB;
                        case "amountDesc":
                            valueA = parseFloat($(a).find("td:nth-child(3)").text());
                            valueB = parseFloat($(b).find("td:nth-child(3)").text());
                            return valueB - valueA;
                        case "dateAsc":
                            valueA = new Date($(a).find("td:nth-child(4)").text());
                            valueB = new Date($(b).find("td:nth-child(4)").text());
                            return valueA - valueB;
                        case "dateDesc":
                            valueA = new Date($(a).find("td:nth-child(4)").text());
                            valueB = new Date($(b).find("td:nth-child(4)").text());
                            return valueB - valueA;
                        default:
                            return 0;
                    }
                });

                // Append sorted rows back to the table body
                $.each(rows, function (index, row) {
                    $("tbody").append(row);
                });
            }
        });
    </script>
}
