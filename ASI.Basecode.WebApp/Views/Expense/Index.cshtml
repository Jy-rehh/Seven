@section styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <style>
        .btn:hover {
            background-color: #548E87;
        }

        .btn-custom, .btn-primary, .btn-secondary, .btn-danger {
            border-radius: 50px;
            padding: 10px 20px;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

            .btn-custom:hover, .btn-primary:hover, .btn-secondary:hover {
                background-color: #548E87;
                color: white;
            }

            .btn-danger:hover {
                background-color: #FF7F7F;
            }

        .modal-dialog-centered-custom {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        .nav-upper {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .close, .close:hover {
            outline: none;
            border: none;
            color: #FFFFFF;
        }
    </style>
}

@model ASI.Basecode.Services.ServiceModels.ExpenseDataModel

@{
    ViewData["Title"] = "Expenses";
}

<body>
    <div class="nav-upper">
        <a href="#" class="btn btn-secondary" data-toggle="modal" data-target="#addExpenseModal" style="font-weight: bold;">
            <i class="fa-solid fa-circle-plus"></i> Add Expense
        </a>
        <div class="modal fade" id="addExpenseModal" tabindex="-1" role="dialog" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addExpenseModalLabel" style="margin-left: 15px;">Add Expense</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form asp-action="Create">
                            <div class="form-group">
                                <label for="Title">Title</label>
                                <input type="text" class="form-control" id="Title" name="Title" style="border-radius: 20px;" required>
                            </div>
                            <div class="form-group">
                                <label for="category">Category</label>
                                <select class="form-control" id="CategoryId" name="CategoryId" style="border-radius: 20px;" required>
                                    <option value="" disabled selected>Select Category</option>
                                    @foreach (var category in Model.CategoryViewModel)
                                    {
                                        <option value="@category.CategoryId">@category.Name</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="Amount">Amount</label>
                                <input type="number" class="form-control" id="Amount" name="Amount" step="0.01" style="border-radius: 20px;" required>
                            </div>
                            <div class="form-group">
                                <label for="Description">Description</label>
                                <input type="text" class="form-control" id="Description" name="Description" style="border-radius: 20px;">
                            </div>
                            <button type="submit" class="btn btn-secondary">Save Expense</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Filter Dropdown -->
        <div class="filter">
            <select class="filter-control" id="Filter" name="Filter">
                <option value="" enable selected>Filter</option>
                @foreach (var category in Model.CategoryViewModel)
                {
                    <option value="@category.CategoryId">@category.Name</option>
                }
            </select>
        </div>

        <!-- Sort Dropdown -->
        <div class="sort">
            <select class="sort-control" id="Sort" name="Sort">
                <option value="" enable selected>Sort by</option>
                <option value="titleAsc">Title (A-Z)</option>
                <option value="titleDesc">Title (Z-A)</option>
                <option value="amountAsc">Amount (Low to High)</option>
                <option value="amountDesc">Amount (High to Low)</option>
                <option value="dateAsc">Date (Oldest First)</option>
                <option value="dateDesc">Date (Newest First)</option>
            </select>
        </div>
    </div>

    <!-- Main Category Table -->
    <div class="main-content" style="height: 100%; margin-top: 20px; background-color: #1A554F;">
        <table id="expenseTable" class="table" style="color: #FFFFFF; border-radius: 20px 20px 0px 0px;">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Category</th>
                    <th>Amount</th>
                    <th>Date Created</th>
                    <th>Description</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody class="data" style="background-color: #FFFFFF; color: #000000;">
                @foreach (var item in Model.ExpenseViewModel)
                {
                    <tr data-toggle="modal" data-target="#expenseDetailModal"
                        data-id="@item.ExpenseId" data-title="@item.Title"
                        data-category="@item.CategoryId" data-amount="@item.Amount"
                        data-date="@item.DateCreated" data-description="@item.Description"
                        class="expense-row">

                        <td>@item.Title</td>
                        <td>@item.CategoryName</td>
                        <td>@item.Amount</td>
                        <td>@item.DateCreated</td>
                        <td>@item.Description</td>
                        <td>
                            <button style="width: 50px; height: fit-content; border-radius: 20px; padding: 5px;"
                                    class="btn btn-secondary edit-expense-btn"
                                    data-toggle="modal"
                                    data-target="#expenseEditModal"
                                    data-id="@item.ExpenseId"
                                    data-title="@item.Title"
                                    data-category="@item.CategoryId"
                                    data-amount="@item.Amount"
                                    data-date="@item.DateCreated"
                                    data-description="@item.Description">
                                Edit
                            </button>
                            <button style="width: 60px; height: fit-content; border-radius: 20px; padding: 5px;"
                                    class="btn btn-danger delete-expense-btn"
                                    data-toggle="modal"
                                    data-target="#confirmDeleteModal"
                                    data-id="@item.ExpenseId"
                                    data-title="@item.Title">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div id="paginationControls" class="d-flex justify-content-end mt-3"></div>

    <!-- Expense Details Modal -->
    <div class="modal fade" id="expenseDetailModal" tabindex="-1" role="dialog" aria-labelledby="expenseDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="expenseDetailModalLabel" style="margin-left: 15px;">Expense Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border: none; outline: none;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editTitle">Title</label>
                        <input type="text" class="form-control" id="editTitle" name="Title" style="border-radius: 20px;" disabled>
                    </div>
                    <div class="form-group">
                        <label for="CategoryId">Category</label>
                        <select class="form-control" id="CategoryId" name="CategoryName" style="border-radius: 20px;" disabled>
                            @foreach (var category in Model.CategoryViewModel)
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAmount">Amount</label>
                        <input type="number" class="form-control" id="editAmount" name="Amount" step="0.01" style="border-radius: 20px;" disabled>
                    </div>
                    <div class="form-group">
                        <label for="editDate">Date</label>
                        <input type="date" class="form-control" id="editDate" name="Date" style="border-radius: 20px;" disabled>
                    </div>
                    <div class="form-group">
                        <label for="editDescription">Description</label>
                        <input class="form-control" id="editDescription" name="Description" rows="3" style="border-radius: 20px;" disabled></input>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Edit Expense Modal -->
    <div class="modal fade" id="expenseEditModal" tabindex="-1" role="dialog" aria-labelledby="expenseEditModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="expenseEditModalLabel" style="margin-left: 15px;">Edit Expense</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editExpenseForm" method="post" asp-action="Edit">
                        <input type="hidden" id="editExpenseId" name="ExpenseId">
                        <div class="form-group">
                            <label for="editTitle">Title</label>
                            <input type="text" class="form-control" id="editTitle" style="border-radius: 20px;" name="Title">
                        </div>
                        <div class="form-group">
                            <label for="CategoryId">Category</label>
                            <select class="form-control" id="CategoryId" name="CategoryId" style="border-radius: 20px;">
                                @foreach (var category in Model.CategoryViewModel)
                                {
                                    <option value="@category.CategoryId">@category.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="editAmount">Amount</label>
                            <input type="number" class="form-control" id="editAmount" name="Amount" step="0.01" style="border-radius: 20px;">
                        </div>
                        <div class="form-group">
                            <label for="editDescription">Description</label>
                            <textarea class="form-control" id="editDescription" name="Description" rows="3" style="border-radius: 20px;"></textarea>
                        </div>

                        <button type="submit" id="saveChanges" class="btn btn-secondary" style="display: flex;">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered-custom" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel" style="margin-left: 15px;">Delete Expense</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete expense "<span id="expenseTitle"></span>"?</p>
                </div>
                <div class="modal-footer">
                    <form asp-action="PostDelete" method="post">
                        <input type="hidden" id="expenseId" name="ExpenseId" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

        @* Open Expense Details Modal *@
        <script>
            $(document).ready(function () {
                $(".expense-row").click(function (e) {
                    const title = $(this).data("title");
                    const categoryId = $(this).data("category");
                    const amount = $(this).data("amount");
                    const date = $(this).data("date");
                    const description = $(this).data("description");

                    $("#expenseDetailModal #editTitle").val(title);
                    $("#expenseDetailModal #editAmount").val(amount);
                    $("#expenseDetailModal #editDate").val(date);
                    $("#expenseDetailModal #editDescription").val(description);

                    const categoryDropdown = $("#expenseDetailModal #CategoryId");
                    categoryDropdown.val(categoryId);

                    if (categoryDropdown.val() !== categoryId.toString()) {
                        categoryDropdown.val("");
                    }

                    $("#expenseDetailModal").modal("show");
                });

                // Open Delete Confirmation Modal
                $(".delete-expense-btn").click(function (e) {
                    e.stopPropagation();

                    const expenseId = $(this).data("id");
                    const title = $(this).data("title");

                    $("#confirmDeleteModal #expenseId").val(expenseId);
                    $("#confirmDeleteModal #expenseTitle").text(title);
                    $("#confirmDeleteModal").modal("show");
                });
            });
        </script>

        @* Filter by Category and Sort *@
        <script>
            $(document).ready(function () {
                $('#Filter').change(function () {
                    var selectedCategory = $(this).val();
                    $('#expenseTable tbody tr').each(function () {
                        var categoryId = $(this).data('category');
                        if (selectedCategory === "" || categoryId == selectedCategory) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                });
                $('#Sort').change(function () {
                    var sortBy = $(this).val();
                    var rows = $('#expenseTable tbody tr').get();

                    rows.sort(function (a, b) {
                        var valA, valB;

                        switch (sortBy) {
                            case 'titleAsc':
                                valA = $(a).data('title').toLowerCase();
                                valB = $(b).data('title').toLowerCase();
                                return valA.localeCompare(valB);
                            case 'titleDesc':
                                valA = $(a).data('title').toLowerCase();
                                valB = $(b).data('title').toLowerCase();
                                return valB.localeCompare(valA);
                            case 'amountAsc':
                                valA = parseFloat($(a).data('amount'));
                                valB = parseFloat($(b).data('amount'));
                                return valA - valB;
                            case 'amountDesc':
                                valA = parseFloat($(a).data('amount'));
                                valB = parseFloat($(b).data('amount'));
                                return valB - valA;
                            case 'dateAsc':
                                valA = new Date($(a).data('date'));
                                valB = new Date($(b).data('date'));
                                return valA - valB;
                            case 'dateDesc':
                                valA = new Date($(a).data('date'));
                                valB = new Date($(b).data('date'));
                                return valB - valA;
                            default:
                                return 0;
                        }
                    });

                    $.each(rows, function (index, row) {
                        $('#expenseTable tbody').append(row);
                    });
                });
            });
        </script>

        @* Open Edit Expense Modal *@
        <script>
            $(document).ready(function () {
                $(".edit-expense-btn").click(function (e) {
                    e.stopPropagation();

                    const expenseId = $(this).data("id");
                    const title = $(this).data("title");
                    const category = $(this).data("category");
                    const amount = $(this).data("amount");
                    const description = $(this).data("description");

                    $("#editExpenseForm #editExpenseId").val(expenseId);
                    $("#editExpenseForm #editTitle").val(title);
                    $("#editExpenseForm #CategoryId").val(category);
                    $("#editExpenseForm #editAmount").val(amount);
                    $("#editExpenseForm #editDescription").val(description);
                    $("#editExpenseForm input, #editExpenseForm textarea, #editExpenseForm select").prop("disabled", false);
                    $("#expenseEditModal").modal("show");
                });

                $(document).ready(function () {
                    $('#editExpenseForm').submit(function (e) {
                        e.preventDefault();

                        var formData = $(this).serialize();

                        $.ajax({
                            url: '/Expense/Edit',
                            type: 'POST',
                            data: formData,
                            success: function (response) {
                                window.location.href = '/Expense/Index';
                            },
                            error: function () {
                                alert('An error occurred while updating the expense.');
                            }
                        });
                    });
                });
            });
        </script>

        @* Pagination *@
        <script>
            $(document).ready(function () {
                function displayPage(page) {
                    rows.hide();
                    const start = (page - 1) * rowsPerPage;
                    const end = start + rowsPerPage;
                    rows.slice(start, end).show();
                    generatePaginationButtons(page);
                }

                function generatePaginationButtons(currentPage) {
                    const paginationControls = $('#paginationControls');
                    paginationControls.empty();

                    // Previous Button
                    const prevDisabled = currentPage === 1 ? 'disabled' : '';
                    paginationControls.append(
                        `<button class="btn btn-secondary mr-1 pagination-btn" data-page="${currentPage - 1}" ${prevDisabled}>Previous</button>`
                    );

                    // Page Numbers
                    for (let i = 1; i <= totalPages; i++) {
                        const activeClass = i === currentPage ? 'active' : '';
                        paginationControls.append(
                            `<button class="pagination-btn ${activeClass}" data-page="${i}">${i}</button>`
                        );
                    }

                    // Next Button
                    const nextDisabled = currentPage === totalPages ? 'disabled' : '';
                    paginationControls.append(
                        `<button class="btn btn-secondary mr-1 pagination-btn" data-page="${currentPage + 1}" ${nextDisabled}>Next</button>`
                    );
                }
                const rowsPerPage = 7;
                const rows = $('#expenseTable tbody tr');
                const totalRows = rows.length;
                const totalPages = Math.ceil(totalRows / rowsPerPage);

                // Initial display
                displayPage(1);

                // Handle pagination button clicks
                $('#paginationControls').on('click', '.pagination-btn', function () {
                    const page = parseInt($(this).data('page'), 10);
                    if (!isNaN(page)) {
                        displayPage(page);
                    }

                });
                // Check for success message and display Toastr notification
                var successMessage = '@TempData["SuccessMessage"]';
                if (successMessage) {
                    toastr.success(successMessage);
                }
            });
        </script>

    }
</body>
