@section styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
}
@model IEnumerable<ASI.Basecode.Services.ServiceModels.ExpenseViewModel>

@{
    ViewData["Title"] = "Report";
}
<body>

    <div class="report-header">
        <h1>Expense Summary</h1>
        <div class="mt-2">
            <a href="#" class="report-btn" data-toggle="modal" data-target="#sortByModal">
                Dropdown Report <i class="fa-solid fa-caret-down"></i>
            </a>
        </div>
    </div>

    <div>
        <div class="report-header2" style="gap: 10px;">
            <button class="header-btn" data-toggle="modal" data-target="#previewModal" onclick="loadPreviewContent()">Preview</button>
            <input type="date" class="header-input" placeholder="Date Start" style="margin-left: 55%; width: 130px;" />
            <input type="date" class="header-input" placeholder="Date End" style="width: 130px;" />
            <button class="header-btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Filter</button>
            <button class="header-btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Sort</button>
        </div>
        <div class="main-content" style="margin-top: 0px; color: #FFFFFF; border-radius: 0px;">
            <p>1</p>
            <p>2</p>
            <p>3</p>
            <p>4</p>
            <p>5</p>
            <p>6</p>
            <p>7</p>
            <p>8</p>
            <p>9</p>
            <p>10</p>
            <p>11</p>
            <p>12</p>
        </div>
    </div>

    <!-- Modal Structure -->
    <div class="modal fade" id="previewModal" tabindex="-1" role="dialog" aria-labelledby="previewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="previewModalLabel">Expense Summary Preview</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="main-content-preview">
                        <!-- Content will be cloned here by JavaScript -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="generatePDF()" style="background-color: #1A554F; border-radius: 20px;">PDF</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Include jsPDF and html2canvas Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <script>
        function loadPreviewContent() {
            const mainContent = document.querySelector('.main-content');
            const modalContent = document.querySelector('.main-content-preview');
            modalContent.innerHTML = '';
            modalContent.innerHTML = mainContent.innerHTML;
        }

        async function generatePDF() {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF();

            // Capture the content of the modal's body
            const content = document.querySelector('.main-content-preview');

            // Use html2canvas to convert the content to an image
            await html2canvas(content, {
                scale: 2
            }).then((canvas) => {
                const imgData = canvas.toDataURL('image/png');
                const imgWidth = 190; // PDF width in mm
                const pageHeight = pdf.internal.pageSize.height;
                const imgHeight = canvas.height * imgWidth / canvas.width;

                // Add the image to the PDF
                pdf.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);

                // Add date and time to the footer
                const currentDate = new Date();
                const footerText = `Generated on: ${currentDate.toLocaleString()}`;
                pdf.setFontSize(10);
                pdf.text(footerText, 10, pageHeight - 10);

                // Save the PDF
                pdf.save('Expense_Summary.pdf');
            });
        }
    </script>
</body>
